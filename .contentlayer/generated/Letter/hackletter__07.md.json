{
  "title": "What is up with my website?",
  "date": "2021-05-04T00:00:00.000Z",
  "body": {
    "raw": "\nYou might have know from my previous letters that I'm rebuilding my website using NextJS.\n\nTurns out, recording videos while working on it harder. And it doesn't make sense to record the non interesting parts, or parts where a lot of manual work is involved instead of creative work. There is one video yet to be edited where I set up themes (dark & light) using Tailwind CSS. I worked on the parts where I had to fill up the content from my old website. And I'll record more videos when I start working on interesting things like `/bookshelf` page, page views counter, etc.\n\nA few notes from the commits I pushed recently\n\n**Images were hard**. Especially because I was coming from Gatsby where the images are local entities. With `next/image` and `next-mdx-loader`, they either should be in the public directory, or should come from an external url. But I have them locally in directories. file-loader came to the rescue.\n\nI'm also thinking of moving the images out of the repository to a cloud like S3 or Cloudinary.\n\nHere is how I used **Web fonts** for the best font loading performance.\n\n- Add the font files locally (in public folder). No Google Fonts link as the edge cache is more performant\n- Set cache headers to let Vercel cache it on the edge\n- Preload them using `<link />`\n- `font-display: optional`\n\nI added `next-seo` to the website and it was a bliss to work with. All the articles now have JSON-LD schema and I copied over the open graph images from my previous setup which work on top of Cloudinary transformations. **SEO gains!**\n\nThis is an example open graph image. Source - https://images.balla.dev/upload/w_1200,h_600,c_fill,q_auto,f_auto/w_984,c_fit,co_rgb:ffffff,g_north_west,x_108,y_87,l_text:Poppins_64_bold:Hackletter/card\n\n![](https://images.balla.dev/upload/w_1200,h_600,c_fill,q_auto,f_auto/w_984,c_fit,co_rgb:ffffff,g_north_west,x_108,y_87,l_text:Poppins_64_bold:Hackletter/card)\n\nThe setup works like this - There is a base image in Cloudinary. It adds the text based on the URL parameters dynamically. The custom url (images.balla.dev) is a Cloudflare proxy which caches the image generated by Cloudinary.\n\n_Lots of clouds, ðŸ˜…_\n\n**RSS** is generated as a prebuild step. It is a node script which gets all the MD(X) files and generates RSS. I've decided not to include the complete content in the feed as I would have few custom components that would need JS to work in the future.\n\nhttps://github.com/aravindballa/website/blob/master/scripts/generateRSS.js\n\nIf you'd like to see the preview of what's going on here is the link - [https://website-indol-pi.vercel.app/](https://website-indol-pi.vercel.app/)\n\nThat's all for this Tuesday.\n\nStay safe.\n",
    "code": "var Component=(()=>{var c=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var i in e)r(n,i,{get:e[i],enumerable:!0})},a=(n,e,i,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!g.call(n,o)&&o!==i&&r(n,o,{get:()=>e[o],enumerable:!(l=p(e,o))||l.enumerable});return n};var _=(n,e,i)=>(i=n!=null?c(u(n)):{},a(e||!n||!n.__esModule?r(i,\"default\",{value:n,enumerable:!0}):i,n)),b=n=>a(r({},\"__esModule\",{value:!0}),n);var d=f((S,s)=>{s.exports=_jsx_runtime});var x={};w(x,{default:()=>v,frontmatter:()=>y});var t=_(d()),y={title:\"What is up with my website?\",date:\"2021-05-04\",type:\"Letter\"};function h(n){let e=Object.assign({p:\"p\",code:\"code\",strong:\"strong\",ul:\"ul\",li:\"li\",img:\"img\",em:\"em\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"You might have know from my previous letters that I'm rebuilding my website using NextJS.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Turns out, recording videos while working on it harder. And it doesn't make sense to record the non interesting parts, or parts where a lot of manual work is involved instead of creative work. There is one video yet to be edited where I set up themes (dark & light) using Tailwind CSS. I worked on the parts where I had to fill up the content from my old website. And I'll record more videos when I start working on interesting things like \",(0,t.jsx)(e.code,{children:\"/bookshelf\"}),\" page, page views counter, etc.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"A few notes from the commits I pushed recently\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Images were hard\"}),\". Especially because I was coming from Gatsby where the images are local entities. With \",(0,t.jsx)(e.code,{children:\"next/image\"}),\" and \",(0,t.jsx)(e.code,{children:\"next-mdx-loader\"}),\", they either should be in the public directory, or should come from an external url. But I have them locally in directories. file-loader came to the rescue.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"I'm also thinking of moving the images out of the repository to a cloud like S3 or Cloudinary.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Here is how I used \",(0,t.jsx)(e.strong,{children:\"Web fonts\"}),\" for the best font loading performance.\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Add the font files locally (in public folder). No Google Fonts link as the edge cache is more performant\"}),`\n`,(0,t.jsx)(e.li,{children:\"Set cache headers to let Vercel cache it on the edge\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Preload them using \",(0,t.jsx)(e.code,{children:\"<link />\"})]}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"font-display: optional\"})}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"I added \",(0,t.jsx)(e.code,{children:\"next-seo\"}),\" to the website and it was a bliss to work with. All the articles now have JSON-LD schema and I copied over the open graph images from my previous setup which work on top of Cloudinary transformations. \",(0,t.jsx)(e.strong,{children:\"SEO gains!\"})]}),`\n`,(0,t.jsx)(e.p,{children:\"This is an example open graph image. Source - https://images.balla.dev/upload/w_1200,h_600,c_fill,q_auto,f_auto/w_984,c_fit,co_rgb:ffffff,g_north_west,x_108,y_87,l_text:Poppins_64_bold:Hackletter/card\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"https://images.balla.dev/upload/w_1200,h_600,c_fill,q_auto,f_auto/w_984,c_fit,co_rgb:ffffff,g_north_west,x_108,y_87,l_text:Poppins_64_bold:Hackletter/card\",alt:\"\"})}),`\n`,(0,t.jsx)(e.p,{children:\"The setup works like this - There is a base image in Cloudinary. It adds the text based on the URL parameters dynamically. The custom url (images.balla.dev) is a Cloudflare proxy which caches the image generated by Cloudinary.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Lots of clouds, \\u{1F605}\"})}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"RSS\"}),\" is generated as a prebuild step. It is a node script which gets all the MD(X) files and generates RSS. I've decided not to include the complete content in the feed as I would have few custom components that would need JS to work in the future.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"https://github.com/aravindballa/website/blob/master/scripts/generateRSS.js\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"If you'd like to see the preview of what's going on here is the link - \",(0,t.jsx)(e.a,{href:\"https://website-indol-pi.vercel.app/\",children:\"https://website-indol-pi.vercel.app/\"})]}),`\n`,(0,t.jsx)(e.p,{children:\"That's all for this Tuesday.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Stay safe.\"})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(h,n)})):h(n)}var v=k;return b(x);})();\n;return Component;"
  },
  "_id": "hackletter/07.md",
  "_raw": {
    "sourceFilePath": "hackletter/07.md",
    "sourceFileName": "07.md",
    "sourceFileDir": "hackletter",
    "contentType": "markdown",
    "flattenedPath": "hackletter/07"
  },
  "type": "Letter",
  "slug": "/hackletter/07"
}